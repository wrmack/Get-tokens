//
//  CreatePasteBinViewController.swift
//  POD browser
//
//  Created by Warwick McNaughton on 12/01/19.
//  Copyright (c) 2019 Warwick McNaughton. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol CreatePasteBinDisplayLogic: class {
    func displaySomething(viewModel: CreatePasteBin.Something.ViewModel)
}

class CreatePasteBinViewController: UITableViewController, CreatePasteBinDisplayLogic {
    var interactor: CreatePasteBinBusinessLogic?
    var router: (NSObjectProtocol & CreatePasteBinRoutingLogic & CreatePasteBinDataPassing)?
    
    

    // MARK: Object lifecycle

    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
  
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }

    // MARK: Setup

    private func setup() {
        let viewController = self
        let interactor = CreatePasteBinInteractor()
        let presenter = CreatePasteBinPresenter()
        let router = CreatePasteBinRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }

    // MARK: Routing

    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
  
  // MARK: View lifecycle
  
    override func viewDidLoad() {
        super.viewDidLoad()
        createBin()
    }


    // MARK: VIP

    func createBin() {
        let request = CreatePasteBin.Something.Request()
        interactor?.createBin(request: request)
    }


    func displaySomething(viewModel: CreatePasteBin.Something.ViewModel) {
        //nameTextField.text = viewModel.name
  }
}
